//Obtener la región 'Amazonas'
db.paises.aggregate(
  { $unwind: "$regiones" },
  { $match: { "regiones.nombre": "Amazonas" } },
  { $project: { region: "$regiones" }}
);
/* Esto trae toda region que se llame 'Amazonas' independiente del País */

//Obtener la región 'Amazonas' de 'Colombia' sin sensibilidad a mayusculas
db.paises.aggregate(
  { $match: { nombre: { $regex: "^colombia$", $options: "i" } } },
  { $unwind: "$regiones" },
  { $match: { "regiones.nombre": { $regex: "^amazonas$", $options: "i" } } },
  { $project: { region: "$regiones" }}
);

//obtener los datos de la ciudad 'Yarumal'
db.paises.aggregate([
  { $unwind: "$regiones" },
  { $unwind: "$regiones.ciudades" },
  { $match: { "regiones.ciudades.nombre": { $regex: "^yarumal$", $options: "i" } } },
  { $project: { 
		pais: "$nombre",
		region: "$regiones.nombre",
		ciudad: "$regiones.ciudades.nombre"
 } }
]);

//Listar las Regiones de un Pais con la Poblacion
db.paises.aggregate(
	{ $unwind: "$regiones" },
	{ $match: { nombre: { $regex: "^colombia$", $options: "i" } } },
	{ $project: { 
			region: "$regiones.nombre",
			poblacion: "$regiones.poblacion"
	 } }
	);
	
//Listar las ciudades de la region 'Boyacá'
db.paises.aggregate(
  { $match: { nombre: { $regex: "^colombia$", $options: "i" } } },
  { $unwind: "$regiones" },
  { $match: { "regiones.nombre": { $regex: "^boyacá$", $options: "i" } } },
	{ $project: { ciudades: "$regiones.ciudades" } }
);

//Listar las Regiones del pais 'Colombia' con la Poblacion superior a 1 millon
db.paises.aggregate(
  { $match: { nombre: { $regex: "^colombia$", $options: "i" } } },
  { $project: {
		deptosMuchaPoblacion: { 
			$map: {
				input: {
    			$filter: {
    				input: "$regiones",
    				as: "depto",
    				cond: { $gte: [ "$$depto.poblacion", 4000000 ] }
    			}
        },
				as: "depto",
				in: {
					nombre: "$$depto.nombre",
					poblacion: "$$depto.poblacion"
				}
		}
	}
} }
);

//Contar las Regiones de un Pais
db.paises.aggregate(
  { $match: { nombre: { $regex: "^brasil$", $options: "i" } } },
  { $project: {
		pais: "$nombre",
		totalRegiones: { $size: "$regiones" }
		}
  }
);

//Contar las Regiones de un Continente
db.paises.aggregate(
  { $match: { continente: { $regex: "^america$", $options: "i" } } },
  { $project: {
		pais: "$nombre",
		totalRegiones: { $size: { $ifNull: [ "$regiones", [] ] } }
		}
  },
  {
		$group: {
			_id: null,
			totalRegionesContinente: { $sum: "$totalRegiones" }
		}
	}
);

//Totalizar las poblaciones de cada Pais
db.paises.aggregate({
  $project: {
  	pais: "$nombre",
  	poblacionTotal: { $sum: "$regiones.poblacion" }
  }
});

//Totalizar la población de un Pais
db.paises.aggregate(
	{ $match: { nombre: { $regex: "^brasil$", $options: "i" } } },
  {
  	$project: {
  		pais: "$nombre",
  		poblacionTotal: { $sum: "$regiones.poblacion" }
  	}
	});
	
//Mostrar los paises con poblacion superior a 40 millones
db.paises.aggregate({
  $project: {
  	pais: "$nombre",
  	poblacionTotal: { $sum: "$regiones.poblacion" }
  }
});


//********** Operaciones de actualizacion **********

//Listar Regiones de un Pais con la poblacion (consulta de verificacion)
db.paises.aggregate(
	{ $unwind: "$regiones" },
	{ $match: { nombre: { $regex: "^francia$", $options: "i" } } },
	{ $project: { 
			region: "$regiones.nombre",
			poblacion: "$regiones.poblacion"
	 } }
	);

//Listar Regiones de un Pais (consulta de verificacion)
db.paises.aggregate([
  { $unwind: "$regiones" },
  { $match: { nombre: { $regex: "^francia$", $options: "i" } } },
  { $project: { 
		pais: "$nombre",
		region: "$regiones.nombre"
 } }
]);

//Agregar regiones a un país
db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
		$push: {
			regiones: {
				$each: [
					{ nombre: "Altos Alpes" },
					{ nombre: "Alpes Marítimos" }
				]
      }
		}
	}
);

//Agregar una Region a un Pais	
db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
		$push: {
			regiones: {
					nombre: "Ain",	
					area: 5762.4 ,
					poblacion: 626127
				}
		}
	}
);

db.paises.updateOne(
  { nombre: { $regex: "^estados unidos$", $options: "i" } },
  {
		$push: {
			regiones: {
					nombre: "Florida",	
					codigo: "FL",
					area: 	170312,
					poblacion: 	21538187
				}
		}
	}
);

//Agregar varias Regiones a un Pais
db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
		$push: {
			regiones: {
				$each: [
          {
  					nombre: "Aisne",	
  					area: 7369 ,
  					poblacion: 534490
					},
					{
  					nombre: "Allier",	
  					area: 7340,
  					poblacion: 337171
					},
					{
  					nombre: "Alpes de Alta Provenza",	
  					area: 6925,
  					poblacion: 161241
					}
				]
      }
		}
	}
);

db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
		$push: {
			regiones: {
				$each: [
					{ nombre: "Altos Alpes" },
					{ nombre: "Alpes Marítimos" }
				]
      }
		}
	}
);


//Listar las Ciudades de un Pais con su Region (consulta de verificacion)
db.paises.aggregate([
  { $unwind: "$regiones" },
  { $unwind: "$regiones.ciudades" },
  { $match: { nombre: { $regex: "^francia$", $options: "i" } } },
  { $project: { 
		pais: "$nombre",
		region: "$regiones.nombre",
		ciudad: "$regiones.ciudades.nombre"
 } }
]);

db.paises.aggregate([
  { $unwind: "$regiones" },
  { $unwind: "$regiones.ciudades" },
  { $match: { nombre: { $regex: "^estados unidos$", $options: "i" } } },
  { $project: { 
		pais: "$nombre",
		region: "$regiones.nombre",
		poblacionRegion: "$regiones.poblacion",
		ciudad: "$regiones.ciudades.nombre",
		poblacionCiudad: "$regiones.ciudades.poblacion",
 } }
]);

//Agregar varias ciudades a una region
db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
    $push: {
      "regiones.$[r].ciudades": {
        $each: [
          { nombre: "Saint-Quentin", poblacion: 53000 },
          { nombre: "Soissons", poblacion: 28000 }
        ]
      }
    }
  },
  {
    arrayFilters: [ { "r.nombre": "Aisne" } ]
  }
);

db.paises.updateOne(
  { nombre: { $regex: "^estados unidos$", $options: "i" } },
  {
    $push: {
      "regiones.$[r].ciudades": {
        $each: [
          { nombre: "Palm Springs", poblacion: 18928 },
          { nombre: "Fort Lauderdale" },
        ]
      }
    }
  },
  {
    arrayFilters: [ { "r.nombre": "Florida" } ]
  }
);

db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
    $push: {
      "regiones.$[r].ciudades": {
        $each: [
          { nombre: "Moulins", poblacion: 19000 },
          { nombre: "Vichy", poblacion: 25000 }
        ]
      }
    }
  },
  {
    arrayFilters: [ { "r.nombre": "Allier" } ]
  }
);

db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
    $push: {
      "regiones.$[r].ciudades": {
        $each: [
          { nombre: "Digne-les-Bains", poblacion: 17000 },
          { nombre: "Manosque", poblacion: 22000 }
        ]
      }
    }
  },
  {
    arrayFilters: [ { "r.nombre": "Alpes de Alta Provenza" } ]
  }
);

//Agregar una ciudad a una region
db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
    $push: {
      "regiones.$[r].ciudades": 
          { nombre: "Niza", poblacion: 	342295 }	  
    }
  },
  {
    arrayFilters: [ { "r.nombre": "Alpes Marítimos" } ]
  }
);

db.paises.updateOne(
  { nombre: { $regex: "^francia$", $options: "i" } },
  {
    $push: {
      "regiones.$[r].ciudades": 
          { nombre: "Gap", poblacion: 40631 }	  
    }
  },
  {
    arrayFilters: [ { "r.nombre": "Altos Alpes" } ]
  }
);

db.paises.updateOne(
  { nombre: { $regex: "^estados unidos$", $options: "i" } },
  {
    $push: {
      "regiones.$[r].ciudades": 
          { nombre: "Miami" }	  
    }
  },
  {
    arrayFilters: [ { "r.nombre": "Florida" } ]
  }
);

//Cambiar datos de una Region a un Pais
db.paises.updateOne(
	{ nombre: { $regex: "^francia$", $options: "i" }, 
		"regiones.nombre": "Altos Alpes" 
	},
	{
		$set:{
			"regiones.$.poblacion": 	139554,
			"regiones.$.area": 5549
		}
	}
);

db.paises.updateOne(
	{ nombre: { $regex: "^francia$", $options: "i" }, 
		"regiones.nombre": "Alpes Marítimos" 
	},
	{
		$set:{
			"regiones.$.poblacion": 1083268,
			"regiones.$.area": 4299
		}
	}
);

//Cambiar datos de una Ciudad en una Region en un Pais
db.paises.updateOne(
	{ nombre: { $regex: "^estados unidos$", $options: "i" }
	},
	{
		$set:{
			"regiones.$[r].ciudades.$[c].poblacion": 	6138333
		}
	},
	{
		arrayFilters: [ 
			{ "r.nombre": "Florida" },
			{ "c.nombre": "Miami" }
		]
	});

db.paises.updateOne(
	{ nombre: { $regex: "^estados unidos$", $options: "i" }
	},
	{
		$set:{
			"regiones.$[r].ciudades.$[c].poblacion": 165521
		}
	},
	{
		arrayFilters: [ 
			{ "r.nombre": "Florida" },
			{ "c.nombre": "Fort Lauderdale" }
		]
	});

db.paises.updateOne(
	{ nombre: { $regex: "^estados unidos$", $options: "i" }
	},
	{
		$set:{
			"regiones.$[r].ciudades.$[c].poblacion": 165521
		}
	},
	{
		arrayFilters: [ 
			{ "r.nombre": "Florida" },
			{ "c.nombre": "Fort Lauderdale" }
		]
	});

db.paises.updateOne(
	{ nombre: { $regex: "^estados unidos$", $options: "i" }
	},
	{
		$set:{
			"regiones.$[r].ciudades.$[c].poblacion": 238300
		}
	},
	{
		arrayFilters: [ 
			{ "r.nombre": "Florida" },
			{ "c.nombre": "Orlando" }
		]
	});

//Eliminar una Ciudad de una Region de un Pais
db.paises.updateOne(
	{ nombre: { $regex: "^estados unidos$", $options: "i" },
		"regiones.nombre": "Florida" 
	},
	{
		$pull: {
			"regiones.$.ciudades": { nombre: "Soissons" }
		}
	}
);

//Eliminar una Region de un Pais
db.paises.updateOne(
	{ nombre: { $regex: "^estados unidos$", $options: "i" }
	},
	{
		$pull: {
			regiones: { nombre: "Antioquia" }
		}
	}
);

//Eliminar un Pais
db.paises.deleteOne(
	{ nombre: { $regex: "^estados unidos$", $options: "i" } }
);

db.paises.deleteOne(
	{ nombre: { $regex: "^antioquia$", $options: "i" } }
);

//Agregar un Pais
db.paises.insertOne(
	{ id:999, nombre:'Antioquia', continente: 'AMERICA', tipoRegion: 'PROVINCIAS', codigoAlfa2: 'AN', codigoAlfa3: 'ANT'}
);

//Modificar datos de un Pais
db.paises.updateOne(
	{ nombre: { $regex: "^antioquia$", $options: "i" } },
	{
		$set: {
			tipoRegion: "ESTADOS"
		}
	}
);
